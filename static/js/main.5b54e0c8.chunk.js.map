{"version":3,"sources":["generateDoc.js","App.js","serviceWorker.js","index.js"],"names":["generteSubstitutingBody","state","Paragraph","style","indent","hanging","children","TextRun","text","reason","post","name","days","flatMap","day","date","toLocaleString","split","bold","underline","type","UnderlineType","SINGLE","discipline","group","locale","localize","getDay","class","substitutesName","generateRescheduleBody","rescheduleReason","reschedulePost","rescheduleName","rescheduleHeaderDays","map","join","rescheduleMainComponents","numbering","reference","level","custom","newDate","newClass","room","size","font","App","useState","from","to","theme","Date","fromName","toName","footerWho","footerWhoName","setState","substitutingState","substitutingSetState","rescheduleState","rescheduleSetState","handleRescheduleHeaderDaysAdd","headerDays","push","handleChange","e","value","target","handleChangeDate","handleChangeMainRescheduleInputs","i","component","handleChangeRescheduleInputs","handleRescheduleMainComponentsAdd","components","handleRescheduleMainComponentsDateChange","index","mainComponentDate","handleSubstituteChange","handleSubstituteDayChange","newDays","handleAddDayClick","handleSaveClick","doc","bodyState","docBody","console","log","Document","styles","paragraphStyles","id","basedOn","next","quickFormat","run","config","levels","format","paragraph","left","addSection","properties","right","generateDocFile","Packer","toBlob","then","blob","saveAs","className","onChange","selected","ru","dateFormat","placeholder","key","length","handleRescheduleHeaderDaysChange","marginRight","onClick","item","handleSubstituteDayDateChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b54e0c8.chunk.js","sourcesContent":["import { Document, Paragraph, TextRun, UnderlineType } from \"docx\";\nimport locale from \"date-fns/esm/locale/ru\";\n\nexport const generateDocFile = (state, bodyState) => {\n  let docBody =\n    state.theme === \"О замене преподавателя\"\n      ? generteSubstitutingBody(bodyState)\n      : generateRescheduleBody(bodyState);\n\n  console.log(docBody);\n  let doc = new Document({\n    styles: {\n      paragraphStyles: [\n        {\n          id: \"Common1\",\n          name: \"Common 1\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          quickFormat: true,\n          run: {\n            font: \"Times New Roman\",\n            size: 28\n          }\n        }\n      ]\n    },\n    numbering: {\n      config: [\n        {\n          reference: \"concrete\",\n          levels: [\n            {\n              level: 0,\n              format: \"decimal\",\n              text: \"%1.\",\n              style: {\n                paragraph: {\n                  indent: { left: 720, hanging: 360 }\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  });\n\n  doc.addSection({\n    properties: {\n      left: 1700,\n      right: 850\n    },\n    children: [\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \" \",\n            size: 24\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \" \",\n            size: 24\n          })\n        ]\n      }),\n      new Paragraph({\n        children: [\n          new TextRun({\n            text: \"СЛУЖЕБНАЯ ЗАПИСКА\\n\",\n            bold: true,\n            size: 32,\n            font: {\n              name: \"Times New Roman\"\n            }\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \" \",\n            size: 32\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \"Кому: \",\n            bold: true\n          }),\n          new TextRun({\n            text: state.to + \" \" + state.toName\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \"От кого: \",\n            bold: true\n          }),\n          new TextRun({\n            text: state.from + \" \" + state.fromName\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \"Дата: \",\n            bold: true\n          }),\n          new TextRun({\n            bold: true,\n            text: state.date.toLocaleString().split(\",\")[0]\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \"Тема: \",\n            bold: true\n          }),\n          new TextRun({\n            bold: true,\n            text: state.theme\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text:\n              \"_____________________________________________________________________________\",\n            size: 24\n          })\n        ]\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: \" \",\n            size: 24\n          })\n        ]\n      }),\n      ...docBody,\n      new Paragraph({\n        style: \"Common1\",\n        text: \" \"\n      }),\n      new Paragraph({\n        style: \"Common1\",\n        children: [\n          new TextRun({\n            text: state.footerWho + \"                                                                  \" + state.footerWhoName\n          })\n        ]\n      })\n    ]\n  });\n\n  return doc;\n};\n\nconst generteSubstitutingBody = state => {\n  return [\n    new Paragraph({\n      style: \"Common1\",\n      indent: {\n        hanging: -300\n      },\n      children: [\n        new TextRun({\n          text:\n            \"В связи с \" +\n            state.reason +\n            \" прошу осуществить замену занятий \" +\n            state.post +\n            \" \" +\n            state.name +\n            \".\"\n        })\n      ]\n    }),\n    ...state.days.flatMap(day => {\n      return [\n        new Paragraph({\n          style: \"Common1\",\n          indent: {\n            hanging: -300\n          },\n          children: [\n            new TextRun({\n              text: day.date.toLocaleString().split(\",\")[0],\n              bold: true,\n              underline: {\n                type: UnderlineType.SINGLE\n              }\n            })\n          ]\n        }),\n        new Paragraph({\n          style: \"Common1\",\n          indent: {\n            hanging: -300\n          },\n          children: [\n            new TextRun({\n              text:\n                day.type +\n                ' по дисциплине \"' +\n                day.discipline +\n                '\" (гр. ' +\n                day.group +\n                \", \" +\n                locale.localize.day(day.date.getDay()) +\n                \", \" +\n                day.class +\n                \" пара) \" +\n                day.substitutesName\n            })\n          ]\n        }),\n        new Paragraph({\n          style: \"Common1\",\n          text: \" \"\n        })\n      ];\n    })\n  ];\n};\n\nconst generateRescheduleBody = state => {\n  return [\n    new Paragraph({\n      indent: {\n        hanging: -300\n      },\n      style: \"Common1\",\n      children: [\n        new TextRun({\n          text:\n            \"В связи с \" +\n            state.rescheduleReason +\n            \" у \" +\n            state.reschedulePost +\n            \" \" +\n            state.rescheduleName +\n            \" прошу \" +\n            state.rescheduleHeaderDays\n              .map(day => day.toLocaleString().split(\",\")[0])\n              .join(\", \") +\n            \" перенести занятия по следующим дисциплинам:\"\n        })\n      ]\n    }),\n    ...state.rescheduleMainComponents.flatMap(day => {\n      return [\n        new Paragraph({\n          style: \"Common1\",\n          numbering: {\n            reference: \"concrete\",\n            level: 0,\n            custom: true\n          },\n          children: [\n            new TextRun({\n              text:\n                day.type +\n                ' по дисциплине \"' +\n                day.discipline +\n                '\" (гр. ' +\n                day.group +\n                \", \" +\n                locale.localize.day(day.date.getDay()) +\n                \", \" +\n                day.date.toLocaleString().split(\",\")[0] +\n                \", \" +\n                day.class +\n                \" пара) будет перенесено на \" +\n                locale.localize.day(day.newDate.getDay()) +\n                \", \" +\n                day.newDate.toLocaleString().split(\",\")[0] +\n                \", \" +\n                day.newClass +\n                \" пара, ауд. \" +\n                day.room,\n              size: 28,\n              font: {\n                name: \"Times New Roman\"\n              }\n            })\n          ]\n        })\n      ];\n    }),\n    new Paragraph({\n      style: \"Common1\",\n      text: \" \"\n    })\n  ];\n};\n","import React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport ru from \"date-fns/locale/ru\";\nimport { saveAs } from \"file-saver\";\nimport { Packer } from \"docx\";\nimport { generateDocFile } from \"./generateDoc\";\n\nimport \"./App.css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction App() {\n  const [state, setState] = useState({\n    from: \"Зав. кафедрой КБМОИС\",\n    to: \"Начальнику учебного отдела\",\n    theme: \"О переносе занятий\",\n    date: new Date(),\n    fromName: \"Влацкой И.В.\",\n    toName: \"Зинюхиной Н.А.\",\n    footerWho: \"Зав. кафедрой КБМОИС\",\n    footerWhoName: \"И. В. Влацкая\"\n  });\n\n  const [substitutingState, substitutingSetState] = useState({\n    reason: \"\",\n    post: \"\",\n    name: \"\",\n    days: [\n      {\n        date: new Date(),\n        type: \"Лабораторная работа\",\n        discipline: \"\",\n        group: \"\",\n        class: 1,\n        substitutesName: \"Козлова Л.А.\"\n      }\n    ]\n  });\n\n  const [rescheduleState, rescheduleSetState] = useState({\n    rescheduleReason: \"\",\n    reschedulePost: \"\",\n    rescheduleName: \"\",\n    rescheduleHeaderDays: [new Date()],\n    rescheduleMainComponents: [\n      {\n        type: \"Лабораторная работа\",\n        discipline: \"\",\n        group: \"\",\n        date: new Date(),\n        newDate: new Date(),\n        class: 1,\n        newClass: 1,\n        room: \"\"\n      }\n    ]\n  });\n\n  const handleRescheduleHeaderDaysAdd = () => {\n    const headerDays = [...rescheduleState.rescheduleHeaderDays];\n    headerDays.push(new Date());\n    rescheduleSetState({\n      ...rescheduleState,\n      rescheduleHeaderDays: headerDays\n    });\n  };\n\n  const handleRescheduleHeaderDaysChange = (date, i) => {\n    const headerDays = [...rescheduleState.rescheduleHeaderDays];\n    headerDays[i] = date;\n    rescheduleSetState({\n      ...rescheduleState,\n      rescheduleHeaderDays: headerDays\n    });\n  };\n\n  const handleChange = e => {\n    const value = e.target.value;\n    setState({\n      ...state,\n      [e.target.name]: value\n    });\n  };\n\n  const handleChangeDate = date => {\n    setState({\n      ...state,\n      date\n    });\n  };\n\n  const handleChangeMainRescheduleInputs = (e, i) => {\n    const value = e.target.value;\n    const component = [...rescheduleState.rescheduleMainComponents];\n    component[i][e.target.name] = value;\n    rescheduleSetState({\n      ...rescheduleState,\n      rescheduleMainComponents: component\n    });\n  };\n\n  const handleChangeRescheduleInputs = e => {\n    const value = e.target.value;\n    rescheduleSetState({\n      ...rescheduleState,\n      [e.target.name]: value\n    });\n  };\n\n  const handleRescheduleMainComponentsAdd = () => {\n    const components = [...rescheduleState.rescheduleMainComponents];\n    components.push({\n      type: \"Лабораторная работа\",\n      discipline: \"\",\n      group: \"\",\n      date: new Date(),\n      newDate: new Date(),\n      class: 1,\n      newClass: 1,\n      room: \"\"\n    });\n    rescheduleSetState({\n      ...rescheduleState,\n      rescheduleMainComponents: components\n    });\n  };\n\n  const handleRescheduleMainComponentsDateChange = (date, index, name) => {\n    const mainComponentDate = [...rescheduleState.rescheduleMainComponents];\n    mainComponentDate[index][name] = date;\n    rescheduleSetState({\n      ...rescheduleState,\n      rescheduleMainComponents: mainComponentDate\n    });\n  };\n\n  const RescheduleMemo = () => {\n    return (\n      <div className=\"reschedule__wrapper\">\n        <div className=\"reschedule__header\">\n          <p>В связи с</p>\n          <input\n            placeholder=\"укажите причину\"\n            name=\"rescheduleReason\"\n            type=\"text\"\n            value={rescheduleState.rescheduleReason}\n            onChange={handleChangeRescheduleInputs}\n          />\n          <p>у</p>\n          <input\n            placeholder=\"укажите должность\"\n            name=\"reschedulePost\"\n            type=\"text\"\n            value={rescheduleState.reschedulePost}\n            onChange={handleChangeRescheduleInputs}\n          />\n          <input\n            placeholder=\"укажите имя\"\n            name=\"rescheduleName\"\n            type=\"text\"\n            value={rescheduleState.rescheduleName}\n            onChange={handleChangeRescheduleInputs}\n          />\n          <p>прошу</p>\n          <div className=\"reschedule__header__dates\">\n            {rescheduleState.rescheduleHeaderDays.map((date, index) => {\n              return (\n                <div className={\"datepicker__wrapper\"} key={index}>\n                  {rescheduleState.rescheduleHeaderDays.length > 1 && (\n                    <span>,</span>\n                  )}\n                  <DatePicker\n                    selected={rescheduleState.rescheduleHeaderDays[index]}\n                    locale={ru}\n                    onChange={date =>\n                      handleRescheduleHeaderDaysChange(date, index)\n                    }\n                    name=\"date\"\n                    dateFormat={\"dd.MM.yyyy\"}\n                  />\n                </div>\n              );\n            })}\n            <button\n              style={{ marginRight: \"20px\" }}\n              className=\"btn-floating btn-small waves-effect waves-light\"\n              onClick={handleRescheduleHeaderDaysAdd}\n            >\n              <i className=\"material-icons\">add</i>\n            </button>\n          </div>\n          <p>перенести занятия по следующим дисциплинам:</p>\n        </div>\n        <div className={\"reschedule__main__components\"}>\n          {rescheduleState.rescheduleMainComponents.map((component, index) => {\n            return (\n              <div className=\"reschedule__main__component\" key={index}>\n                <h5>{index + 1}. </h5>\n                <select\n                  name=\"type\"\n                  className=\"browser-default\"\n                  onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                >\n                  <option>Лабораторная работа</option>\n                  <option>Практическое занятие</option>\n                  <option>Лекционное занятие</option>\n                </select>\n                <p>по дисциплине</p>\n                <input\n                  type=\"text\"\n                  name=\"discipline\"\n                  placeholder=\"Название дисциплины\"\n                  onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                />\n                <span>&#040;</span>\n                <span>гр. </span>\n                <input\n                  type=\"text\"\n                  name=\"group\"\n                  placeholder=\"Группа\"\n                  onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                />\n                <span>,</span>\n                <div className=\"datepicker__wrapper\">\n                  <DatePicker\n                    selected={\n                      rescheduleState.rescheduleMainComponents[index].date\n                    }\n                    locale={ru}\n                    onChange={date =>\n                      handleRescheduleMainComponentsDateChange(\n                        date,\n                        index,\n                        \"date\"\n                      )\n                    }\n                    name=\"date\"\n                    dateFormat={\"dd.MM.yyyy\"}\n                  />\n                </div>\n                <div className=\"datepicker__wrapper\">\n                  <input\n                    placeholder=\"№ пары\"\n                    type=\"number\"\n                    name=\"class\"\n                    value={rescheduleState.rescheduleMainComponents.class}\n                    onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                  />\n                </div>\n                <span>пара</span>\n                <span>&#041;</span>\n                <p>&nbsp;будет перенесено на</p>\n                <div className=\"datepicker__wrapper\">\n                  <DatePicker\n                    selected={\n                      rescheduleState.rescheduleMainComponents[index].newDate\n                    }\n                    locale={ru}\n                    onChange={date =>\n                      handleRescheduleMainComponentsDateChange(\n                        date,\n                        index,\n                        \"newDate\"\n                      )\n                    }\n                    name=\"newDate\"\n                    dateFormat={\"dd.MM.yyyy\"}\n                  />\n                </div>\n                <span>,</span>\n                <div className=\"datepicker__wrapper\">\n                  <input\n                    placeholder=\"№ пары\"\n                    type=\"number\"\n                    name=\"newClass\"\n                    value={rescheduleState.rescheduleMainComponents.newClass}\n                    onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                  />\n                </div>\n                <span>пара</span>\n                <span>, ауд. </span>\n                <div className=\"datepicker__wrapper\">\n                  <input\n                    placeholder=\"№ ауд.\"\n                    type=\"number\"\n                    name=\"room\"\n                    value={rescheduleState.rescheduleMainComponents.room}\n                    onChange={e => handleChangeMainRescheduleInputs(e, index)}\n                  />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        <button\n          className=\"btn-floating btn-small waves-effect waves-light\"\n          onClick={handleRescheduleMainComponentsAdd}\n        >\n          <i className=\"material-icons\">add</i>\n        </button>\n      </div>\n    );\n  };\n\n  const handleSubstituteChange = e =>\n    substitutingSetState({\n      ...substitutingState,\n      [e.target.name]: e.target.value\n    });\n\n  const handleSubstituteDayChange = (e, i) => {\n    let newDays = [...substitutingState.days];\n    newDays[i][e.target.name] = e.target.value;\n    substitutingSetState({\n      ...substitutingState,\n      days: newDays\n    });\n  };\n\n  const handleSubstituteDayDateChange = (date, i) => {\n    let newDays = [...substitutingState.days];\n    newDays[i].date = date;\n    substitutingSetState({\n      ...substitutingState,\n      days: newDays\n    });\n  };\n\n  const handleAddDayClick = () => {\n    let newDays = [...substitutingState.days];\n    newDays.push({\n      date: new Date(),\n      type: \"Лабораторная работа\",\n      discipline: \"\",\n      group: \"\",\n      class: 1,\n      substitutesName: \"\"\n    });\n    substitutingSetState({\n      ...substitutingState,\n      days: newDays\n    });\n  };\n\n  const handleSaveClick = () => {\n    let doc = generateDocFile(\n      state,\n      state.theme === \"О замене преподавателя\"\n        ? substitutingState\n        : rescheduleState\n    );\n    Packer.toBlob(doc).then(blob => {\n      saveAs(blob, \"Служебная записка.docx\");\n    });\n  };\n\n  const SubstitutingBody = () => {\n    return (\n      <div className=\"body\">\n        <div className=\"body__main\">\n          <span>В связи с</span>\n          <input\n            type=\"text\"\n            value={substitutingState.reason}\n            onChange={handleSubstituteChange}\n            name=\"reason\"\n          />\n          <span>прошу осуществить замену занятий</span>\n          <br />\n          <input\n            placeholder=\"должность\"\n            className=\"col s6\"\n            type=\"text\"\n            value={substitutingState.post}\n            name=\"post\"\n            onChange={handleSubstituteChange}\n          />\n          <input\n            placeholder=\"ФИО преподавателя\"\n            type=\"text\"\n            value={substitutingState.name}\n            name=\"name\"\n            onChange={handleSubstituteChange}\n          />\n        </div>\n        <div className=\"body__list\">\n          <ol>\n            {substitutingState.days.map((item, i) => (\n              <li key={i}>\n                <div className=\"datepicker__wrapper\">\n                  <DatePicker\n                    selected={item.date}\n                    locale={ru}\n                    onChange={date => handleSubstituteDayDateChange(date, i)}\n                    name=\"date\"\n                    dateFormat={\"dd.MM.yyyy\"}\n                  />\n                </div>\n                <div className=\"body__list__row\">\n                  <select\n                    name=\"type\"\n                    onChange={e => handleSubstituteDayChange(e, i)}\n                    className=\"browser-default\"\n                  >\n                    <option>Лабораторная работа</option>\n                    <option>Практическое занятие</option>\n                    <option>Лекционное занятие</option>\n                  </select>\n                  <span>по дисциплине</span>\n                  <input\n                    type=\"text\"\n                    name=\"discipline\"\n                    value={item.discipline}\n                    onChange={e => handleSubstituteDayChange(e, i)}\n                  />\n                </div>\n                <div className=\"body__list__row\">\n                  <span>группа</span>\n                  <input\n                    type=\"text\"\n                    name=\"group\"\n                    value={item.group}\n                    onChange={e => handleSubstituteDayChange(e, i)}\n                  />\n                  <div className=\"datepicker__wrapper\">\n                    <input\n                      type=\"number\"\n                      name=\"class\"\n                      value={item.class}\n                      onChange={e => handleSubstituteDayChange(e, i)}\n                    />\n                  </div>\n\n                  <p>пара</p>\n                </div>\n                <input\n                  placeholder=\"Заменяющий преподаватель\"\n                  type=\"text\"\n                  name=\"substitutesName\"\n                  value={item.substitutesName}\n                  onChange={e => handleSubstituteDayChange(e, i)}\n                />\n              </li>\n            ))}\n          </ol>\n          <button\n            className=\"btn-floating btn-small waves-effect waves-light\"\n            onClick={handleAddDayClick}\n          >\n            <i className=\"material-icons\">add</i>\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const renderHeader = () => {\n    return (\n      <div className=\"header\">\n        <div>\n          <p>СЛУЖЕБНАЯ ЗАПИСКА</p>\n        </div>\n        <div className=\"header__fields\">\n          <div className=\"header__fields__item\">\n            <p className=\"header__fields__item__title\">Кому:</p>\n            <input\n              type=\"text\"\n              value={state.to}\n              onChange={handleChange}\n              name=\"to\"\n            />\n            <input\n              type=\"text\"\n              value={state.toName}\n              onChange={handleChange}\n              name=\"toName\"\n            />\n          </div>\n          <div className=\"header__fields__item\">\n            <p className=\"header__fields__item__title\">От кого:</p>\n            <input\n              type=\"text\"\n              value={state.from}\n              onChange={handleChange}\n              name=\"from\"\n            />\n            <input\n              type=\"text\"\n              value={state.fromName}\n              onChange={handleChange}\n              name=\"fromName\"\n            />\n          </div>\n          <div className=\"header__fields__item\">\n            <p className=\"header__fields__item__title\">Дата:</p>\n            <div className={\"datepicker__wrapper\"}>\n              <DatePicker\n                selected={state.date}\n                locale={ru}\n                onChange={handleChangeDate}\n                name=\"date\"\n                dateFormat={\"dd.MM.yyyy\"}\n              />\n            </div>\n          </div>\n          <div className=\"header__fields__item\">\n            <p className=\"header__fields__item__title\">Тема:</p>\n            <select\n              name=\"theme\"\n              onChange={handleChange}\n              className=\"browser-default header__select\"\n            >\n              <option>О переносе занятий</option>\n              <option>О замене преподавателя</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFooter = () => {\n    return (\n      <div className=\"footer\">\n        <div>\n          <div className=\"footer__inputs\">\n            <input\n              type=\"text\"\n              value={state.footerWho}\n              onChange={handleChange}\n              name=\"footerWho\"\n            />\n            <input\n              type=\"text\"\n              value={state.footerWhoName}\n              onChange={handleChange}\n              name=\"footerWhoName\"\n            />\n          </div>\n          <button\n            className=\"waves-effect waves-light btn\"\n            onClick={handleSaveClick}\n          >\n            сохранить записку\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"wrapper\">\n      {renderHeader()}\n      <div className=\"main\">\n        {state.theme === \"О переносе занятий\"\n          ? RescheduleMemo()\n          : SubstitutingBody()}\n      </div>\n      {renderFooter()}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}